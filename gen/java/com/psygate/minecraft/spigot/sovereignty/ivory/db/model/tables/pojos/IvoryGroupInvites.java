/**
 * This class is generated by jOOQ
 */
package com.psygate.minecraft.spigot.sovereignty.ivory.db.model.tables.pojos;


import com.psygate.minecraft.spigot.sovereignty.ivory.groups.Rank;

import java.io.Serializable;
import java.sql.Timestamp;
import java.util.UUID;

import javax.annotation.Generated;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class IvoryGroupInvites implements Serializable {

	private static final long serialVersionUID = 381993314;

	private final Long      groupId;
	private final UUID      puuid;
	private final Rank      rank;
	private final UUID      inviterPuuid;
	private final Timestamp invitetime;
	private final Timestamp expires;

	public IvoryGroupInvites(IvoryGroupInvites value) {
		this.groupId = value.groupId;
		this.puuid = value.puuid;
		this.rank = value.rank;
		this.inviterPuuid = value.inviterPuuid;
		this.invitetime = value.invitetime;
		this.expires = value.expires;
	}

	public IvoryGroupInvites(
		Long      groupId,
		UUID      puuid,
		Rank      rank,
		UUID      inviterPuuid,
		Timestamp invitetime,
		Timestamp expires
	) {
		this.groupId = groupId;
		this.puuid = puuid;
		this.rank = rank;
		this.inviterPuuid = inviterPuuid;
		this.invitetime = invitetime;
		this.expires = expires;
	}

	public Long getGroupId() {
		return this.groupId;
	}

	public UUID getPuuid() {
		return this.puuid;
	}

	public Rank getRank() {
		return this.rank;
	}

	public UUID getInviterPuuid() {
		return this.inviterPuuid;
	}

	public Timestamp getInvitetime() {
		return this.invitetime;
	}

	public Timestamp getExpires() {
		return this.expires;
	}

	@Override
	public String toString() {
		StringBuilder sb = new StringBuilder("IvoryGroupInvites (");

		sb.append(groupId);
		sb.append(", ").append(puuid);
		sb.append(", ").append(rank);
		sb.append(", ").append(inviterPuuid);
		sb.append(", ").append(invitetime);
		sb.append(", ").append(expires);

		sb.append(")");
		return sb.toString();
	}
}
